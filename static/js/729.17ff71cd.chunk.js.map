{"version":3,"file":"static/js/729.17ff71cd.chunk.js","mappings":"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","sources":["components/common.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ChangeForm/ChangeForm.styled.js","components/ChangeForm/ChangeForm.jsx","components/DeleteForm/DeleteForm.styled.js","components/DeleteForm/DeleteForm.jsx","components/Avatar/Avatar.styled.js","components/Avatar/Avatar.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/InputForm/InputForm.styled.js","components/InputForm/InputForm.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport 'index.css';\n\nexport const Container = styled.div`\n  max-width: 1600;\n  padding: 1rem 2rem;\n`;\n\nexport const AppTitle = styled.h1`\n  display: block;\n  font-size: 2rem;\n  font-weight: 800;\n  margin-bottom: 1.5rem;\n  color: var(--bgcolor-accent);\n`;\n\nexport const Title = styled.h2`\n  display: block;\n  font-size: 1.5rem;\n  font-weight: 400;\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n  width: fit-content;\n  height: fit-content;\n  border: 1px solid var(--bgcolor-accent);\n  border-radius: 1rem;\n  margin: 2rem auto;\n`;\n\nexport const ContactsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 400px 1fr;\n  gap: 1rem;\n`;\n\nexport const AsideOperation = styled.aside`\n  padding: 1rem;\n`;\n","import styled from 'styled-components';\nimport 'index.css';\n\nexport const ContactWrapper = styled.li`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ItemWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  border-bottom: 1px solid var(--bgcolor-accent);\n  border-radius: 0 0 1.25rem 0;\n  width: 100%;\n`;\n\nexport const ItemName = styled.p`\n  display: block;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 0.5rem;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--bgcolor-accent);\n`;\n\nexport const ItemPhone = styled.p`\n  display: block;\n  margin: 0;\n  padding: 0;\n  font-size: 1rem;\n  font-weight: 400;\n  color: var(--title-color);\n`;\n\nexport const ItemModifyBtn = styled.button`\n  display: block;\n  margin-left: 1rem;\n  font-size: 1rem;\n  font-weight: 400;\n  color: var(--title-color);\n\n  padding: 0.25rem 0.5rem;\n  width: 6.25rem;\n  border-radius: 0.25rem;\n  border: 1px solid var(--bgcolor-accent);\n  background-color: transparent;\n  transition: background-color 250ms ease;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--bgcolor-accent);\n  }\n  & + & {\n    margin-top: 0.25rem;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1.5rem;\n  width: fit-content;\n  height: fit-content;\n  font-size: 1.25rem;\n  font-weight: 400;\n  color: var(--bgcolor-accent);\n  border: 1px solid var(--bgcolor-accent);\n  border-radius: 1rem;\n  margin: 2rem auto;\n  background-color: black;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  & + & {\n    margin-top: 0.75rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 20rem;\n  font-size: 1.25rem;\n  padding: 0.5rem;\n  margin-top: 0.25rem;\n  border-radius: 0 0 1.25rem 0;\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid var(--bgcolor-accent);\n  color: var(--title-color);\n  &::placeholder {\n    font-weight: 200;\n    font-style: italic;\n    color: var(--bgcolor-second);\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: var(--main-bgcolor);\n  padding: 0.5rem 1rem;\n  margin-top: 2rem;\n  border-radius: 0.25rem;\n  border: none;\n  background-color: var(--bgcolor-first);\n  transition: background-color 250ms ease, color 250ms ease;\n  cursor: pointer;\n\n  & + & {\n    margin-left: 1rem;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--bgcolor-accent);\n    color: var(--title-color);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { editContact } from 'redux/contacts/operations.js';\n\nimport {\n  StyledInput,\n  StyledLabel,\n  Button,\n  StyledForm,\n} from './ChangeForm.styled.js';\nimport { selectContacts } from 'redux/contacts/selectors.js';\nimport { toastMessage } from 'components/Layout.jsx';\n\nconst ChangeForm = ({ id, name, number, onClose }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [nameValue, setNameValue] = useState(name);\n  const [numberValue, setNumberValue] = useState(number);\n\n  const handleChange = evt => {\n    const currentInput = evt?.target;\n    if (currentInput.name === 'name') {\n      setNameValue(currentInput.value);\n    } else {\n      setNumberValue(currentInput.value);\n    }\n  };\n\n  const handleEditSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt?.target;\n    const { name: nameInput, number: numberInput } = form.elements;\n\n    const contactName = nameInput.value.trim();\n    const contactPhone = numberInput.value.trim();\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase().trim() === contactName\n      ) &&\n      contactName !== name\n    ) {\n      toastMessage('Contact with such name exists yet.');\n      return;\n    }\n\n    if (contactName === name && contactPhone === number) {\n      onClose();\n      return;\n    }\n\n    dispatch(editContact({ id, name: contactName, number: contactPhone }));\n    onClose();\n  };\n\n  return (\n    <StyledForm onSubmit={handleEditSubmit}>\n      <StyledLabel>\n        Name\n        <StyledInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={nameValue}\n          required\n          autoComplete=\"off\"\n          onChange={handleChange}\n        />\n      </StyledLabel>\n      <StyledLabel>\n        Phone\n        <StyledInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={numberValue}\n          required\n          autoComplete=\"off\"\n          onChange={handleChange}\n        />\n      </StyledLabel>\n      <Button type=\"submit\">Edit contact</Button>\n    </StyledForm>\n  );\n};\n\nChangeForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ChangeForm;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1.5rem;\n  width: fit-content;\n  height: fit-content;\n  font-size: 1.25rem;\n  font-weight: 400;\n  color: var(--bgcolor-accent);\n  border: 1px solid var(--bgcolor-accent);\n  border-radius: 1rem;\n  margin: 2rem auto;\n  background-color: black;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  & + & {\n    margin-top: 0.75rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 20rem;\n  font-size: 1.25rem;\n  padding: 0.5rem;\n  margin-top: 0.25rem;\n  border-radius: 0 0 1.25rem 0;\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid var(--bgcolor-accent);\n  color: var(--title-color);\n  &::placeholder {\n    font-weight: 200;\n    font-style: italic;\n    color: var(--bgcolor-second);\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: var(--main-bgcolor);\n  padding: 0.5rem 1rem;\n  margin-top: 2rem;\n  border-radius: 0.25rem;\n  border: none;\n  background-color: var(--bgcolor-first);\n  transition: background-color 250ms ease, color 250ms ease;\n  cursor: pointer;\n\n  & + & {\n    margin-left: 1rem;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--bgcolor-accent);\n    color: var(--title-color);\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n`;\n","import { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/contacts/operations.js';\n\nimport {\n  StyledInput,\n  StyledLabel,\n  Button,\n  StyledForm,\n} from './DeleteForm.styled.js';\nimport { ButtonsWrapper } from './DeleteForm.styled.js';\n\nconst DeleteForm = ({ id, name, number, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteSubmit = evt => {\n    evt.preventDefault();\n\n    dispatch(deleteContact(id));\n\n    onClose();\n  };\n\n  return (\n    <StyledForm onSubmit={handleDeleteSubmit}>\n      <StyledLabel>\n        Name\n        <StyledInput type=\"text\" value={name} disabled={true} />\n      </StyledLabel>\n      <StyledLabel>\n        Phone\n        <StyledInput type=\"tel\" name=\"number\" value={number} disabled={true} />\n      </StyledLabel>\n      <ButtonsWrapper>\n        <Button type=\"submit\">Delete</Button>\n        <Button type=\"button\" onClick={onClose}>\n          Cancel\n        </Button>\n      </ButtonsWrapper>\n    </StyledForm>\n  );\n};\n\nDeleteForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default DeleteForm;\n","import styled from 'styled-components';\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 60px;\n  min-width: 60px;\n  border: 2px solid var(--bgcolor-accent);\n  border-radius: 50% 50% 50% 0;\n  margin-right: 1rem;\n`;\n\nexport const FirstLetters = styled.span`\n  display: block;\n  font-size: 1.25rem;\n  font-weight: 400;\n  color: var(--title-color);\n`;\n","import PropTypes from 'prop-types';\nimport { AvatarWrapper, FirstLetters } from './Avatar.styled';\n\nconst Avatar = ({ str }) => {\n  const firstLetters = str\n    ? str\n        .split(' ')\n        .map(word => word[0].toUpperCase())\n        .join('')\n    : ' ';\n\n  return (\n    <AvatarWrapper>\n      <FirstLetters>{firstLetters}</FirstLetters>\n    </AvatarWrapper>\n  );\n};\n\nAvatar.propTypes = {\n  str: PropTypes.string.isRequired,\n};\n\nexport default Avatar;\n","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {\n  ItemWrapper,\n  ContactWrapper,\n  ItemName,\n  ItemPhone,\n  ItemModifyBtn,\n  BtnWrapper,\n} from './ContactListItem.styled.js';\n\nimport Modal from 'components/Modal/Modal.jsx';\nimport ChangeForm from 'components/ChangeForm/index.js';\nimport DeleteForm from 'components/DeleteForm/index.js';\nimport Avatar from 'components/Avatar/Avatar.jsx';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [isOpenedEditModal, SetIsOpenedEditModal] = useState(false);\n  const [isOpenedDeleteModal, SetIsOpenedDeleteModal] = useState(false);\n\n  const handleEditModalToggle = () => SetIsOpenedEditModal(!isOpenedEditModal);\n  const handleDeleteModalToggle = () =>\n    SetIsOpenedDeleteModal(!isOpenedDeleteModal);\n\n  return (\n    <>\n      <ContactWrapper>\n        <Avatar str={name} />\n        <ItemWrapper>\n          <ItemName>{name}</ItemName>\n          <ItemPhone>{number}</ItemPhone>\n        </ItemWrapper>\n        <BtnWrapper>\n          <ItemModifyBtn type=\"button\" onClick={handleEditModalToggle}>\n            Edit\n          </ItemModifyBtn>\n          <ItemModifyBtn type=\"button\" onClick={handleDeleteModalToggle}>\n            Delete\n          </ItemModifyBtn>\n        </BtnWrapper>\n      </ContactWrapper>\n      {isOpenedEditModal && (\n        <Modal onClose={handleEditModalToggle}>\n          <ChangeForm\n            id={id}\n            name={name}\n            number={number}\n            onClose={handleEditModalToggle}\n          />\n        </Modal>\n      )}\n      {isOpenedDeleteModal && (\n        <Modal onClose={handleDeleteModalToggle}>\n          <DeleteForm\n            id={id}\n            name={name}\n            number={number}\n            onClose={handleDeleteModalToggle}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 1rem;\n  height: fit-content;\n  padding: 1rem;\n\n  @media screen and (min-width: 1200px) and (max-width: 1600px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media screen and (min-width: 1601px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport ContactListItem from 'components/ContactListItem';\nimport { StyledList } from './ContactList.styled';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <StyledList>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </StyledList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 1.25rem;\n  color: var(--bgcolor-accent);\n  margin-bottom: 1rem;\n`;\n\nexport const FilterInput = styled.input`\n  width: 23rem;\n  font-size: 1.25rem;\n  padding: 0.5rem;\n  margin-top: 0.25rem;\n  border-radius: 0 0 1.25rem 0;\n  background-color: inherit;\n  border: none;\n  border-bottom: 1px solid var(--bgcolor-accent);\n  color: var(--title-color);\n  &::placeholder {\n    font-weight: 200;\n    font-style: italic;\n    color: var(--bgcolor-second);\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/slice';\n\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handlerFilterChange = evt => {\n    dispatch(setFilter(evt?.target?.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        title=\"Filter is case unsensitive.\"\n        onChange={handlerFilterChange}\n        required\n      />\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1.5rem;\n  width: fit-content;\n  height: fit-content;\n  font-size: 1.25rem;\n  font-weight: 400;\n  color: var(--bgcolor-accent);\n  border: 1px solid var(--bgcolor-accent);\n  border-radius: 1rem;\n  margin: 2rem auto;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  & + & {\n    margin-top: 0.75rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 20rem;\n  font-size: 1.25rem;\n  padding: 0.5rem;\n  margin-top: 0.25rem;\n  border-radius: 0 0 1.25rem 0;\n  background-color: inherit;\n  border: none;\n  border-bottom: 1px solid var(--bgcolor-accent);\n  color: var(--title-color);\n  &::placeholder {\n    font-weight: 200;\n    font-style: italic;\n    color: var(--bgcolor-second);\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: var(--main-bgcolor);\n  padding: 0.5rem 1rem;\n  margin-top: 2rem;\n  border-radius: 0.25rem;\n  border: none;\n  background-color: var(--bgcolor-first);\n  transition: background-color 250ms ease, color 250ms ease;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--bgcolor-accent);\n    color: var(--title-color);\n  }\n`;\n","import { toastMessage } from 'components/Layout.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations.js';\nimport { selectContacts } from 'redux/contacts/selectors.js';\n\nimport {\n  StyledInput,\n  StyledLabel,\n  Button,\n  StyledForm,\n} from './InputForm.styled.js';\n\nconst InputForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt?.target;\n    const { name, number } = form.elements;\n    const contactName = name.value.trim();\n    const contactPhone = number.value.trim();\n\n    if (\n      !contacts.some(\n        contact =>\n          contact.name.toLowerCase().trim() === contactName.toLowerCase()\n      )\n    ) {\n      form.reset();\n\n      dispatch(addContact({ name: contactName, number: contactPhone }));\n    } else {\n      toastMessage('Contact with such name exists yet.');\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledLabel>\n        Name\n        <StyledInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n        />\n      </StyledLabel>\n      <StyledLabel>\n        Phone\n        <StyledInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          autoComplete=\"off\"\n        />\n      </StyledLabel>\n      <Button type=\"submit\">Add contact</Button>\n    </StyledForm>\n  );\n};\n\nexport default InputForm;\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { useContacts } from 'components/hooks';\n\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport InputForm from 'components/InputForm';\nimport Loader from 'components/Loader';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { AsideOperation, ContactsContainer } from 'components/common.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsContainer>\n      <AsideOperation>\n        <Filter />\n        <InputForm />\n        {isLoading && !error && <Loader />}\n      </AsideOperation>\n      <ContactList />\n    </ContactsContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","AppTitle","Title","HeaderWrapper","ContactsContainer","AsideOperation","ContactWrapper","ItemWrapper","ItemName","ItemPhone","ItemModifyBtn","BtnWrapper","StyledForm","StyledLabel","StyledInput","Button","id","name","number","onClose","contacts","useSelector","selectContacts","dispatch","useDispatch","useState","nameValue","setNameValue","numberValue","setNumberValue","handleChange","evt","currentInput","target","value","onSubmit","preventDefault","elements","nameInput","numberInput","contactName","trim","contactPhone","some","contact","toLowerCase","toastMessage","editContact","type","pattern","title","required","autoComplete","onChange","ButtonsWrapper","deleteContact","disabled","onClick","AvatarWrapper","FirstLetters","str","firstLetters","split","map","word","toUpperCase","join","isOpenedEditModal","SetIsOpenedEditModal","isOpenedDeleteModal","SetIsOpenedDeleteModal","handleEditModalToggle","handleDeleteModalToggle","Modal","StyledList","visibleContacts","selectVisibleContacts","FilterLabel","FilterInput","setFilter","form","reset","addContact","useContacts","isLoading","error","useEffect","fetchContacts","Loader"],"sourceRoot":""}